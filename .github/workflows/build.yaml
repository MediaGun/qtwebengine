name: Build library
run-name: Build library by ${{ github.actor }}

on:
  push:
    branches:
      - master
      - test
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}

permissions:
  contents: read
  packages: write

env:
  qt_version: ${{ vars.QT_VERSION }}
  qt_version_short: ${{ vars.QT_VERSION_SHORT }}
  
jobs:
  build_linux:
    name: Build for Linux
    runs-on: [ ubuntu-22.04 ]
    
    env: 
      build_dir: './build'
      install_prefix: '${{ github.workspace }}/install_linux'
      
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build bison build-essential flex git gperf gyp libxext-dev libasound2-dev libavcodec-dev libavformat-dev libavutil-dev libdbus-1-dev libdrm-dev libegl1-mesa-dev libevent-dev libfontconfig1-dev libfreetype6-dev libjsoncpp-dev libminizip-dev libnss3-dev libopus-dev libpci-dev libprotobuf-dev libpulse-dev libre2-dev libsnappy-dev libsrtp2-dev libssl-dev libudev-dev libvpx-dev libwebp-dev libx11-dev libx11-xcb-dev libxcb-glx0-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-shm0-dev libxcb-sync0-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb1-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev libxrandr-dev libxkbfile-dev libxrender-dev libxss-dev libxtst-dev ninja-build nodejs protobuf-compiler libxshmfence-dev libicu70 libicu-dev 
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.qt_version }}
          dir: /opt
          tools: 'tools_ninja'
          archives: 'qtbase qtdeclarative qtshadertools'
          
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
          
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.24.3'
          
      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: '2.7'
      
      # - run: sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1000
      
      # - run: sudo ln -f -s /bin/python2.7 /usr/bin/python
          
      # - run: python --version    
      
      - name: Install python modules
        run: pip install html5lib
          
      - run: |
          cmake --version
          python --version
          
      - name: Get QtWebEngine sources
        run: |
          mkdir qt && cd qt
          
          git clone git://code.qt.io/qt/qtwebengine.git
          cd qtwebengine
          git checkout origin/${{ env.qt_version_short }}
          git submodule init
          git submodule update
          cd ..

      - name: Build QtWebEngine
        run: |
          cd qt
          
          mkdir ${{ env.build_dir }} && cd ${{ env.build_dir }}
          mkdir qtwebengine

          cd qtwebengine
          /opt/Qt/${{ env.qt_version }}/gcc_64/bin/qt-configure-module ../../qtwebengine -webengine-pepper-plugins -webengine-proprietary-codecs
          cmake --build . --parallel
          cmake --install .
          cd ..

