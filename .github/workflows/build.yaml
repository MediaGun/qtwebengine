name: Build library
run-name: Build library by ${{ github.actor }}

on:
  push:
    branches:
      - master
      - test
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}

permissions:
  contents: read
  packages: write

env:
  qt_version: ${{ vars.QT_VERSION }}
  qt_checkout_tag: ${{ vars.QT_CHECKOUT_TAG }}

jobs:
  build_linux:
    name: Build for Linux
    runs-on: [ ubuntu-22.04 ]

    env:
      build_dir: './build'
      install_prefix: '${{ github.workspace }}/install_linux'

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
            bison build-essential flex git gperf gyp \
            libasound2-dev libatspi2.0-dev libavcodec-dev libavformat-dev libavutil-dev libcups2-dev \
            libdbus-1-dev libdrm-dev libegl1-mesa-dev libevent-dev libfontconfig1-dev libfreetype6-dev libicu-dev libjsoncpp-dev libminizip-dev \
            libnss3-dev libopus-dev libpci-dev libprotobuf-dev libpulse-dev libre2-dev libsnappy-dev libsrtp2-dev libssl-dev libudev-dev libvpx-dev \
            libwebp-dev libx11-dev libx11-xcb-dev libxcb-glx0-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev \
            libxcb-render-util0-dev libxcb-shape0-dev libxcb-shm0-dev libxcb-sync0-dev libxcb-util-dev libxcb-xfixes0-dev libxcb-xinerama0-dev \
            libxcb-xkb-dev libxcb1-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxext-dev libxfixes-dev libxi-dev libxkbcommon-dev \
            libxkbcommon-x11-dev libxkbfile-dev libxrandr-dev libxrender-dev libxshmfence-dev libxss-dev libxtst-dev \
            ninja-build ninja-build nodejs protobuf-compiler

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.qt_version }}
          dir: /opt
          tools: 'tools_ninja'
          modules: 'qtshadertools'

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.24.3'

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '>=3.10.0 <3.10.10'

      - name: Install python modules
        run: |
          python3 --version
          pip install html5lib

      - name: Get QtWebEngine sources
        run: |
          mkdir qt && cd qt

          git clone git://code.qt.io/qt/qtwebengine.git
          cd qtwebengine
          git checkout ${{ env.qt_checkout_tag }}
          git submodule init
          git submodule update
          cd ..

      - name: Configure QtWebEngine
        run: |
          cd qt

          mkdir ${{ env.build_dir }} && cd ${{ env.build_dir }}
          mkdir qtwebengine
          cd qtwebengine

          ${{ env.QT_ROOT_DIR }}/bin/qt-configure-module ../../qtwebengine -webengine-pepper-plugins -webengine-proprietary-codecs -- -DCMAKE_INSTALL_PREFIX=${{ env.install_prefix }}

      - name: Build QtWebEngine
        run: |
          cd qt/build/qtwebengine

          cmake --build . --parallel
          cmake --install .

      - name: Publish
        uses: actions/upload-artifact@v4
        with:
          name: qtwebengine-linux
          path: ${{ env.install_prefix }}

  build_windows:
    name: Build for Windows
    runs-on: [ windows-2019 ]

    env:
      build_dir: './build'
      install_prefix: '${{ github.workspace }}/install_windows'
      libs_dir: '${{ github.workspace }}/libs_deps'
      qt_dir: 'C:\opt'
      qt_tools_dir: ${{ github.workspace }}/Qt/Tools
      cmake_c_compiler: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x64\cl.exe'
      cmake_cxx_compiler: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x64\cl.exe'
      vcvars: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat'

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Prepare environment
        shell: pwsh
        run: |
          $p = "HKLM:\System\CurrentControlSet\Control\Filesystem"
          Get-ItemPropertyValue $p LongPathsEnabled
          Set-ItemProperty $p LongPathsEnabled 1
          Get-ItemPropertyValue $p LongPathsEnabled

      - name: Prepare tools
        run: |
          choco install gperf
          choco install winflexbison3

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.qt_version }}
          dir: ${{ env.qt_dir }}
          tools: 'tools_ninja'
          modules: 'qtshadertools'

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Setup Cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.24.3'

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '>=3.10.0 <3.10.10'

      - name: Install python modules
        run: |
          python3 --version
          pip install html5lib

      - name: Get QtWebEngine sources
        run: |
          mkdir qt
          cd qt

          git clone git://code.qt.io/qt/qtwebengine.git
          cd qtwebengine
          git checkout ${{ env.qt_checkout_tag }}
          git submodule init
          git submodule update
          cd ..

      - name: Configure QtWebEngine
        shell: cmd
        run: |
          call "${{ env.vcvars }}"
          cd qt

          mkdir build
          cd build

          mkdir qtwebengine
          cd qtwebengine

          ${{ env.QT_ROOT_DIR }}\bin\qt-configure-module.bat ../../qtwebengine -webengine-pepper-plugins -webengine-proprietary-codecs -- -DCMAKE_INSTALL_PREFIX=${{ env.install_prefix }}

      - name: Build QtWebEngine
        shell: cmd
        run: |
          call "${{ env.vcvars }}"

          cd qt/build/qtwebengine

          cmake --build . --parallel
          cmake --install .

      - name: Publish
        uses: actions/upload-artifact@v4
        with:
          name: qtwebengine-windows
          path: ${{ env.install_prefix }}

  build_macos:
    name: Build for MacOS
    runs-on: [ macos-13 ]

    env:
      build_dir: './build'
      install_prefix: '${{ github.workspace }}/install_macos'
      libs_dir: '${{ github.workspace }}/libs_deps'

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.qt_version }}
          dir: ${{ github.workspace }}/opt
          tools: 'tools_ninja'
          modules: 'qtshadertools'

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.24.3'

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '>=3.10.0 <3.10.10'

      - name: Install python modules
        run: |
          python3 --version
          pip install html5lib

      - name: Get QtWebEngine sources
        run: |
          mkdir qt && cd qt

          git clone git://code.qt.io/qt/qtwebengine.git
          cd qtwebengine
          git checkout ${{ env.qt_checkout_tag }}
          git submodule init
          git submodule update
          cd ..

      - name: Configure QtWebEngine
        run: |
          cd qt

          mkdir ${{ env.build_dir }} && cd ${{ env.build_dir }}
          mkdir qtwebengine
          cd qtwebengine

          ls -la ${{ github.workspace }}/qt/qtwebengine

          ${{ env.QT_ROOT_DIR }}/bin/qt-configure-module ${{ github.workspace }}/qt/qtwebengine -webengine-pepper-plugins -webengine-proprietary-codecs -- -DCMAKE_INSTALL_PREFIX=${{ env.install_prefix }}

      - name: Build QtWebEngine
        run: |
          cd qt/build/qtwebengine

          cmake --build . --parallel
          cmake --install .

          cd ..

      - name: Publish
        uses: actions/upload-artifact@v4
        with:
          name: qtwebengine-macos
          path: ${{ env.install_prefix }}